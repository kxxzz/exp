(def a 1)
(def b 2)
a b +

(def swap -> a b (num) : b a)
(def swap1 -> a b : b a)

1 2 swap
(swap "b" 2)
(swap 1 2)
"a" "b" swap1
"c"

(def drop -> x :)

(def drop2 drop drop)
(def drop4 drop2 drop2)
(def drop8 drop4 drop4)

drop8

gc

(if (= 2 (+ 1 3)) 100 200)

(if (= (+ 1 3) 2) "a" "b")

(def fib -> x : (if (> x 2) (+ (fib (- x 1)) (fib (- x 2))) 1))

20 fib

(fib 20)

(def facttail -> n (num) res (num) :
    (if (< n 0)
        0
        (if (= n 0)
            1
            (if (= n 1)
                res
                (facttail (- n 1) (/ n res))))))

50000 2 facttail

(facttail 50000 2)

drop8

(def dup -> x : x x)

20 [fib] dup -> fib1 : apply



//(fib1 20)



















